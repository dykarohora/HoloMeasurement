@startuml

namespace Figure {
    abstract class BaseFigure {
    }
    namespace Impl {
        class Line {
            +void Intialize(Point start, Point end, GameObject line)
        }
        class Polygon {
        }
        class Solid {
        }
        Line --d|> Figure.BaseFigure
        Polygon --d|> Figure.BaseFigure
        Solid --d|> Figure.BaseFigure

        Line -[hidden]r- Polygon
        Polygon -[hidden]r- Solid
    }

    interface IPointMovable {
        IReadOnlyReactiveProperty<Vector3> Position
    }


    class Point {
        +void SetPosition(Vector3 position)
    }

    BaseFigure --l|> AppManager.IDeletable

    Point --|> IPointMovable
    Point --r* BaseFigure

}

namespace AppManager {
    class VoiceCommandManager {

    }

    class GameStateManager {

    }
    class MainAppManager {
    }
    enum AppState {
        Intialize
        Line
        Polygon
        Solid
    }
    
    interface IPointSettable {
        void SetPoint(GameObject prefab, Vector3 position)
    }
    interface IDeletable {
        void DeleteFigure()
    }

    MainAppManager --> IPointSettable
}

namespace Sizer {
    class LineSizer {
    }
    LineSizer --|> AppManager.IPointSettable
}

namespace Menu {
    class MenuPresenter {
    }
    class MenuButton {
    }

    MenuPresenter --d> MenuButton
    MenuPresenter --d> AppManager.GameStateManager
}


@enduml